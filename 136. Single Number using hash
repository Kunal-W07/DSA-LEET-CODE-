class Solution {
public:
    int singleNumber(vector<int>& nums) {
       // using hash
       int n = nums.size();
       unordered_map<int,int>hash;
       for(int i=0; i<n; i++){
          hash[nums[i]]++;
       }
       for(int i=0; i<n; i++){
          if(hash[nums[i]]<2){
            return nums[i];
          }
       }
       return 0;
    }

 };


class Solution {
public:
    int singleNumber(vector<int>& nums) {
        unordered_map<int,int>map;

        int n = nums.size();
        for(int i=0; i<n; i++){
            int v = nums[i];
            // map[v] = map[v] + 1;
            map[v]++;
        }
        int ans = -1;
        for(auto it : map){
            if(it.second < 2){
                ans = it.first;
                break;
                return ans;
            }
        }
        return ans;
    }
};
